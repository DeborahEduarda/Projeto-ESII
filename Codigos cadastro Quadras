package br.com.tenisclube.telas;

import java.sql.*;
import br.com.tenisclube.dal.ModuloConexao;
import javax.swing.JOptionPane;

/**
 *
 * @author debor
 */
public class TelaQuadra extends javax.swing.JInternalFrame {
    // usando a variavel conexao do DAL
    Connection conexao = null;
    // criando variaveis especiais para conexão com o banco
    //Prepared Statemente e ResultSet são frameworks do pacote java.sql
    // e servem para preparar e executar as instruções SQL
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form TelaQuadra
     */
    public TelaQuadra() {
        initComponents();
        conexao = ModuloConexao.conector();
    }
    //Criando metodo Consultar
    private void consultar(){
        String sql = "select * from tbquadras where idquad=?";
        try{
            pst = conexao.prepareStatement(sql);
            pst.setString(1,txtQId.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
               txtQNome.setText(rs.getString(2)); 
               txtQPreco.setText(rs.getString(3));
               //a linha abaixo se refere ao combobox
               cboQBanJog.setSelectedItem(rs.getString(4));
               cboQArqb.setSelectedItem(rs.getString(5));
               cboQCob.setSelectedItem(rs.getString(6));
               cboQTipo.setSelectedItem(rs.getString(7));              
            } else {
                JOptionPane.showMessageDialog(null,"Quadra não cadastrada");
                //as linhas abaixo "limpa" os campos
                txtQNome.setText(null); 
                txtQPreco.setText(null);
                //a linha abaixo se refere ao combobox
                cboQBanJog.setSelectedItem(null);
                cboQArqb.setSelectedItem(null);
                cboQCob.setSelectedItem(null);
                cboQTipo.setSelectedItem(null);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    // Criando metodo Adicionar
     private void adicionar(){
        String sql = "insert into tbquadras (idquad,nomequadra,preco,bancoquad,arquibancada,quadcoberta,tipoquad) values (?,?,?,?,?,?,?)";
        try{            
            pst = conexao.prepareStatement(sql);
            pst.setString(1,txtQId.getText());
            pst.setString(2,txtQNome.getText());
            pst.setString(3,txtQPreco.getText());
            pst.setString(4,cboQBanJog.getSelectedItem().toString());
            pst.setString(5,cboQArqb.getSelectedItem().toString());
            pst.setString(6,cboQCob.getSelectedItem().toString());
            pst.setString(7,cboQTipo.getSelectedItem().toString());
            
            //Validação dos campos obrigatorios
            if ((txtQId.getText().isEmpty())||(txtQNome.getText().isEmpty())||(txtQPreco.getText().isEmpty()))
                {
                JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatorios!");
            } else {
            
            //a linha abaixo atualiza a tabela usuario com os dados do formulario 
                int adicionado = pst.executeUpdate();
                //a linha abaixo confirma a inserção de dados
                if(adicionado > 0){
                    JOptionPane.showMessageDialog(null,"Quadra adicionada com sucesso!");
                     //as linhas abaixo "limpa" os campos
                txtQNome.setText(null); 
                txtQPreco.setText(null);
                
                }
                }
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
 // criando o metodo para alterar dados do usuario
    private void alterar(){
        String sql="update tbquadras set nomequadra=?,preco=?,tipoquad=?,bancoquad=?,arquibancada=?,quadcoberta=? where idquad=?";
        try {
            pst = conexao.prepareStatement(sql);
            
            pst.setString(1,txtQNome.getText());
            pst.setString(2,txtQPreco.getText());
            pst.setString(3,cboQTipo.getSelectedItem().toString());
            pst.setString(4,cboQArqb.getSelectedItem().toString());
            pst.setString(5,cboQCob.getSelectedItem().toString());
            pst.setString(6,cboQBanJog.getSelectedItem().toString());
            pst.setString(7,txtQId.getText());
               
         //Validação dos campos obrigatorios
            if ((txtQId.getText().isEmpty())||(txtQNome.getText().isEmpty())||(txtQPreco.getText().isEmpty()))
                {
                JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatorios!");
            } else {
            
            //a linha abaixo atualiza a tabela usuario com os dados do formulario 
                int adicionado = pst.executeUpdate();
                //a linha abaixo confirma a inserção de dados
                if(adicionado > 0){
                    JOptionPane.showMessageDialog(null,"Dados da  alterados com sucesso!");
                     //as linhas abaixo "limpa" os campos
                    txtQNome.setText(null); 
                    txtQPreco.setText(null);
                    //a linha abaixo se refere ao combobox
                 
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    //metodo Responsavel pela remoção de usuario no banco
    private void remover(){
    //a estrutura abaixo confirma a remoção de usuario
    int confirma = JOptionPane.showConfirmDialog(null," Tem certeza que deseja Excluir esse usuário?" ,"Atenção", JOptionPane.YES_NO_OPTION);
    if (confirma==JOptionPane.YES_OPTION){
        String sql="delete from tbquadras where idquad=?";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1,txtQId.getText());
            int apagado = pst.executeUpdate();
            if(apagado>0){
                JOptionPane.showMessageDialog(null,"Usuário removido com sucesso");
                txtQNome.setText(null); 
                txtQPreco.setText(null);
                //a linha abaixo se refere ao combobox
                cboQBanJog.setSelectedItem(null);
                cboQArqb.setSelectedItem(null);
                cboQCob.setSelectedItem(null);
                cboQTipo.setSelectedItem(null);
            }
            
            
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        }
    
    
  
     
    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        //Chamar metodo Remover
        remover();
    }                                         

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // Chamando metodo consultar
        consultar();
    }                                            

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // Chamando metodo adicionar
        adicionar();
    }                                            

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // Chamando metodo Alterar
        alterar();
    }                                          
